<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.2.xsd">
         
    <!-- 
        The whole deployment descriptor is a Spring 3 configuration file. There are a couple of
        standard and specific beans that can be set up, and this example file walks you 
        through them. 
        
        We assume that you have a basic understanding of ElasticSearch concepts, such as clustering,
        sharding and replication.
     -->

	<!-- 
	   This acts as a key-value map that can be used for runtime variable 
	   substitution by the Spring IoC container. We use it for convenience, it is not required. 
	-->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties">
			<value>
				es.version=elasticsearch-0.90.0
			</value>
		</property>
	</bean>

    <!-- 
        We assume that all our servers have the same directory layout so we define a couple of
        global paths that will be reused below. 
    -->
	<bean id="bnfDataRoot" class="com.github.nicosensei.elastic.cluster.beans.FilePath">
		<property name="path" value="/data/elasticsearch" />
	</bean>

    <!-- This is the directory where node management scripts will reside. -->
	<bean id="scriptsDir" class="com.github.nicosensei.elastic.cluster.beans.FilePath">
		<property name="path" value="/home/obiwan/elasticsearch/imperial" />
	</bean>

    <!-- 
        This is the directory where we will put temporary files during deployment.
        As of now it's only the ES distribution zip file. 
    -->
	<bean id="tmpDir" class="com.github.nicosensei.elastic.cluster.beans.FilePath">
		<property name="path" value="/tmp" />
	</bean>

    <!--  Path to the JDK -->
	<bean id="javaHome" class="com.github.nicosensei.elastic.cluster.beans.FilePath">
		<property name="path" value="/usr/lib/jvm/jdk1.7.0_21" />
	</bean>

    <!-- The desired home directory for ElasticSearch -->
	<bean id="esHome" class="com.github.nicosensei.elastic.cluster.beans.FilePath">
		<property name="path" value="/home/obiwan/elasticsearch/${es.version}" />
	</bean>

	<!-- 
	   Cluster definition.
	   
	   The deployment descriptor must contain exactly one cluster bean.
	 -->
	<bean class="com.github.nicosensei.elastic.cluster.beans.Cluster">
	    <!--  The cluster name -->
		<property name="name" value="imperial" />
		<!-- The number of shards on a data node -->
		<property name="shardCount" value="10" />
		<!-- The number of replica across all data node, per data shard -->
		<property name="replicaCount" value="1" />
		<!-- The cache field type (resident (default), soft... -->
		<property name="cacheFieldType" value="soft" />
		<!-- The time, in seconds to wait after issuing a shutdown to a node -->
		<property name="shutdownWaitInSeconds" value="10" />
		<!-- The time, in seconds to wait after starting a node -->
        <property name="startupWaitInSeconds" value="2" />
		<!-- The local folder to which the deploy tool will output the generated files. -->
		<property name="localOutputPath">
			<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
				<property name="path" value="/home/obiwan/git/elastic-cluster/target" />
			</bean>
		</property>
		<!-- The local path to the ElasticSearch distribution zip -->
		<property name="esZipFile">
			<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
				<property name="path"
					value="/home/obiwan/zipballs/${es.version}.zip" />
			</bean>
		</property>
		
		<!--  
		      A string identifying the ElasticSearch version. We expect the distro zip to be named
		      elasticsearch-<version>.zip, and to contain a root folder elasticsearch-<version>.
		      This value is used identify this ropot directory and be able to move the extracted files
		      to the proper ES home directory.
		 -->
		<property name="esVersionName" value="${es.version}" />

        <!-- 
            The list of deployment hosts.
            
            An ElasticSearch deployment will be performed on every host.
        -->
		<property name="hosts">
			<list>
				<bean class="com.github.nicosensei.elastic.cluster.beans.Host">
				    <!--  The remote host name -->
					<property name="name" value="tatooine" />
					<!--  
					   The remote host user. You should properly configure SSH identities
					   on both your local machine and the host. 
					-->
					<property name="user" value="jedi" />
					<!-- The ElasticSearch home directory on the host -->
					<property name="elasticSearchHome" ref="esHome" />
					<!-- The JDK installation path on the host. -->
					<property name="javaHome" ref="javaHome" />
					<!-- The temporary directory on the host (used only for dropping the ES zip) -->
					<property name="tmpPath" ref="tmpDir" />
					
					<!--
					   The list of ElasticSearch nodes to deploy on that host. 
					   You may have several nodes on the same host if you desire so.
					 -->
					<property name="nodes">
						<list>
							<!-- Master coordinator node -->
							<bean class="com.github.nicosensei.elastic.cluster.beans.Node">
							    <!-- 
							         A unique string identitying the node for the deployment.
							         This token is used to generate unique file names.
							         Use only alphanumeric characters and no whitespace. 
							    -->
								<property name="id" value="master" />
								
								<property name="startupOrder" value="1" />
								
								<!-- 
								    The node's display name. 
								    ES generates funny names if you don't configure it yourself.
								-->
								<property name="name" value="Emperor Palpatine" />
								
								<!-- The directory on the host where node management scripts will reside. -->
								<property name="scriptsPath" ref="scriptsDir" />
								
								<!-- The heap size to allocate to the virtual machine running the node -->
								<property name="heapSize" value="512m" />
								
								<!--
								    Excerpt from ES elasticsearch.yml template:
								    # ElasticSearch performs poorly when JVM starts swapping: you should ensure that
                                    # it _never_ swaps.
									Set this property to true to lock the memory (it actually sets 
									the bootstrap.mlockall ES configuration property.
								 -->
								<property name="lockAllMemory" value="true" />
								
								<!-- 
								    Whether or not the node can be elected as master. It's possible to have 
								    several master candidates, if you want to eliminate a SPOF.
								-->
								<property name="master" value="true" />
								
								<!--
								    Whether or not the node stores data. 
								 -->
								<property name="data" value="false" />
								
								<!-- HTTP port used to issue REST commands to the node. -->
								<property name="httpPort" value="9200" />
								
								<!-- TCP transport port for internal communication -->
								<property name="tcpPort" value="9300" />
								<!--  
									Path on the host where ES configuration files for this node 
									(elasticsearch.yml and logging.yml) are stored. 
								-->
								<property name="confPath">
									<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
										<property name="root" ref="bnfDataRoot" />
										<property name="path" value="master/conf" />
									</bean>
								</property>
								
								<!-- 
								    Directory on this host where index data will be stored 
								    (relevant for data nodes) 
								-->
								<property name="dataPath">
									<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
										<property name="root" ref="bnfDataRoot" />
										<property name="path" value="master/data" />
									</bean>
								</property>
								
								<!-- 
                                    Directory on this host where ES will output work data.
                                -->
								<property name="workPath">
									<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
										<property name="root" ref="bnfDataRoot" />
										<property name="path" value="master/work" />
									</bean>
								</property>
								
								<!-- 
                                    Directory on this host where node logs will be written.
                                -->
								<property name="logsPath">
									<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
										<property name="root" ref="bnfDataRoot" />
										<property name="path" value="master/logs" />
									</bean>
								</property>
								
								<!-- 
                                    Directory on this host where the node's plugins will be installed.
                                    Currently the tool only handles automatic installation of the head plugin.
                                -->
								<property name="pluginsPath">
									<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
										<property name="root" ref="bnfDataRoot" />
										<property name="path" value="master/plugins" />
									</bean>
								</property>
								
								<!-- 
								    The plugins to install. Define plugin names as they should be sent to the 
								    ES plugins command line tool.
								-->
								<property name="plugins">
								    <set>
								        <bean class="com.github.nicosensei.elastic.cluster.beans.Plugin">
								            <property name="name" value="head" />
								            <property name="id" value="mobz/elasticsearch-head" />
								        </bean>
								        <bean class="com.github.nicosensei.elastic.cluster.beans.Plugin">
								            <property name="name" value="paramedic" />
                                            <property name="id" value="karmi/elasticsearch-paramedic" />
                                        </bean>
                                        <bean class="com.github.nicosensei.elastic.cluster.beans.Plugin">
                                            <property name="name" value="bigdesk" />
                                            <property name="id" value="lukas-vlcek/bigdesk" />
                                        </bean>
								    </set>
								</property>
							</bean>
							
							<!-- 
							     Further configuration is detailed to illustrate the available ES node 
							     topology.
							 -->
							
							<!-- 
							     Load-balancer node : nor a master nor a data node, acts as a search load 
							     balancer (fetching data from nodes, aggregating results, etc.).
                            -->
							<bean class="com.github.nicosensei.elastic.cluster.beans.Node">
								<property name="id" value="loadBalancer" />
								<property name="startupOrder" value="2" />
								<property name="name" value="Darth Vader" />
								<property name="scriptsPath" ref="scriptsDir" />
								<property name="heapSize" value="1024m" />
								<property name="lockAllMemory" value="true" />
								<property name="master" value="false" />
								<property name="data" value="false" />
								
								<!--
								    When configuring several ES nodes on the same host, be sure to define
								    distinct ports. 
								 -->
								<property name="httpPort" value="10200" />
								<property name="tcpPort" value="10300" />
								<property name="confPath">
									<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
										<property name="root" ref="bnfDataRoot" />
										<property name="path" value="loadBalancer/conf" />
									</bean>
								</property>
								<property name="dataPath">
									<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
										<property name="root" ref="bnfDataRoot" />
										<property name="path" value="loadBalancer/data" />
									</bean>
								</property>
								<property name="workPath">
									<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
										<property name="root" ref="bnfDataRoot" />
										<property name="path" value="loadBalancer/work" />
									</bean>
								</property>
								<property name="logsPath">
									<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
										<property name="root" ref="bnfDataRoot" />
										<property name="path" value="loadBalancer/logs" />
									</bean>
								</property>
								<property name="pluginsPath">
									<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
										<property name="root" ref="bnfDataRoot" />
										<property name="path" value="loadBalancer/plugins" />
									</bean>
								</property>
							</bean>
						</list>
					</property>
				</bean>
				<bean class="com.github.nicosensei.elastic.cluster.beans.Host">
					<property name="name" value="hoth" />
					<property name="user" value="jedi" />
					<property name="elasticSearchHome" ref="esHome" />
					<property name="javaHome" ref="javaHome" />
					<property name="tmpPath" ref="tmpDir" />
					<property name="nodes">
						<!-- Data node (1 out of 2) -->
						<bean class="com.github.nicosensei.elastic.cluster.beans.Node">
							<property name="id" value="data1" />
							<property name="startupOrder" value="3" />
							<property name="name" value="Death Star" />
							<property name="scriptsPath" ref="scriptsDir" />
							<property name="heapSize" value="1024m" />
							<property name="lockAllMemory" value="true" />
							<property name="master" value="false" />
							<property name="data" value="true" />
							<property name="httpPort" value="9200" />
							<property name="tcpPort" value="9300" />
							<property name="confPath">
								<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
									<property name="root" ref="bnfDataRoot" />
									<property name="path" value="data1/conf" />
								</bean>
							</property>
							<property name="dataPath">
								<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
									<property name="root" ref="bnfDataRoot" />
									<property name="path" value="data1/data" />
								</bean>
							</property>
							<property name="workPath">
								<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
									<property name="root" ref="bnfDataRoot" />
									<property name="path" value="data1/work" />
								</bean>
							</property>
							<property name="logsPath">
								<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
									<property name="root" ref="bnfDataRoot" />
									<property name="path" value="data1/logs" />
								</bean>
							</property>
							<property name="pluginsPath">
								<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
									<property name="root" ref="bnfDataRoot" />
									<property name="path" value="data1/plugins" />
								</bean>
							</property>
						</bean>
					</property>
				</bean>
				<bean class="com.github.nicosensei.elastic.cluster.beans.Host">
					<property name="name" value="yavin" />
					<property name="user" value="jedi" />
					<property name="elasticSearchHome" ref="esHome" />
					<property name="javaHome" ref="javaHome" />
					<property name="tmpPath" ref="tmpDir" />
					<property name="nodes">
						<!-- Data node (2 out of 2) -->
						<bean class="com.github.nicosensei.elastic.cluster.beans.Node">
							<property name="id" value="data2" />
							<property name="startupOrder" value="4" />
							<property name="name" value="Tie Fighter" />
							<property name="scriptsPath" ref="scriptsDir" />
							<property name="heapSize" value="1024m" />
							<property name="lockAllMemory" value="true" />
							<property name="master" value="false" />
							<property name="data" value="true" />
							<property name="httpPort" value="9200" />
							<property name="tcpPort" value="9300" />
							<property name="confPath">
								<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
									<property name="root" ref="bnfDataRoot" />
									<property name="path" value="data2/conf" />
								</bean>
							</property>
							<property name="dataPath">
								<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
									<property name="root" ref="bnfDataRoot" />
									<property name="path" value="data2/data" />
								</bean>
							</property>
							<property name="workPath">
								<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
									<property name="root" ref="bnfDataRoot" />
									<property name="path" value="data2/work" />
								</bean>
							</property>
							<property name="logsPath">
								<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
									<property name="root" ref="bnfDataRoot" />
									<property name="path" value="data2/logs" />
								</bean>
							</property>
							<property name="pluginsPath">
								<bean class="com.github.nicosensei.elastic.cluster.beans.FilePath">
									<property name="root" ref="bnfDataRoot" />
									<property name="path" value="data2/plugins" />
								</bean>
							</property>
						</bean>
					</property>
				</bean>
			</list>
		</property>

	</bean>

</beans>